// Express base request method
app.get("/", (req, res) => {
  //*1 Send html/text
  // res.send("<h1>Hello World</h1>")
  //*2 Send Json object
  // res.send({ name: "Gass" });
  // or
  // res.json({ name: "Gass" });
  //*3 Send status
  // res.sendStatus(400);
  //*4 Send status with message
  // res.status(400).json({ success: false });
  //*5 Best
  res.status(200).json({ success: true, data: { id: 1 } });
});

Middleware is a function that has access to the request response cycle and runs during that cycle.
You can set request variables and do all types of stuff.
Example: Logging middleware.
//const logger = require('./middleware/logger');

// const logger = (req, res, next)=>{ // runs on every request
//   req.hello = 'Hello World'; // we have access to this variable within our routes
//   console.log('Middleware ran');
//   next(); // in every middleware piece, to move to the next thing in the cycle
// }
// Mount Logger
// app.use(logger);

// controller with error handling, basic:
exports.getBootcamp = async (req, res, next) => {
  try {
    const bootcamp = await Bootcamp.findById(req.params.id);

    if (!bootcamp) {
      // Well structured id but doesn't exist
      return next(
        new ErrorResponse(`Bootcamp not found with id: ${req.params.id}`, 404)
      ); // Let the middleware handle the error
    }

    res.status(200).json({ success: true, data: bootcamp });
  } catch (err) {
    // Bad id
    // res.status(400).json({ success: false });
    // next(new ErrorResponse(`Bootcamp not found with id: ${req.params.id}`, 404)); // Let the middleware handle the error
    next(err);
  }
};

// Get Bootcamps in radius of your current location
call this:
/api/v1/bootcamps/radius/02118/10000

the bootcamps location is defined by zipcode
get bootcamps within 10,000 miles of location.